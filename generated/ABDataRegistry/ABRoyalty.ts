// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ABRoyalty__getIndexInfoResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getIndexValue(): BigInt {
    return this.value0;
  }

  getTotalUnitsApproved(): BigInt {
    return this.value1;
  }

  getTotalUnitsPending(): BigInt {
    return this.value2;
  }
}

export class ABRoyalty extends ethereum.SmartContract {
  static bind(address: Address): ABRoyalty {
    return new ABRoyalty("ABRoyalty", address);
  }

  AB_ADMIN_ROLE(): Bytes {
    let result = super.call("AB_ADMIN_ROLE", "AB_ADMIN_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_AB_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "AB_ADMIN_ROLE",
      "AB_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  IDA_UNITS_PRECISION(): BigInt {
    let result = super.call(
      "IDA_UNITS_PRECISION",
      "IDA_UNITS_PRECISION():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_IDA_UNITS_PRECISION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "IDA_UNITS_PRECISION",
      "IDA_UNITS_PRECISION():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  IMPLEMENTATION_VERSION(): i32 {
    let result = super.call(
      "IMPLEMENTATION_VERSION",
      "IMPLEMENTATION_VERSION():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_IMPLEMENTATION_VERSION(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "IMPLEMENTATION_VERSION",
      "IMPLEMENTATION_VERSION():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  REGISTRY_ROLE(): Bytes {
    let result = super.call("REGISTRY_ROLE", "REGISTRY_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_REGISTRY_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REGISTRY_ROLE",
      "REGISTRY_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getClaimableAmount(_dropId: BigInt, _user: Address): BigInt {
    let result = super.call(
      "getClaimableAmount",
      "getClaimableAmount(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_dropId),
        ethereum.Value.fromAddress(_user)
      ]
    );

    return result[0].toBigInt();
  }

  try_getClaimableAmount(
    _dropId: BigInt,
    _user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getClaimableAmount",
      "getClaimableAmount(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_dropId),
        ethereum.Value.fromAddress(_user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIndexInfo(_dropId: BigInt): ABRoyalty__getIndexInfoResult {
    let result = super.call(
      "getIndexInfo",
      "getIndexInfo(uint256):(uint128,uint128,uint128)",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );

    return new ABRoyalty__getIndexInfoResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getIndexInfo(
    _dropId: BigInt
  ): ethereum.CallResult<ABRoyalty__getIndexInfoResult> {
    let result = super.tryCall(
      "getIndexInfo",
      "getIndexInfo(uint256):(uint128,uint128,uint128)",
      [ethereum.Value.fromUnsignedBigInt(_dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ABRoyalty__getIndexInfoResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getUserSubscription(_dropId: BigInt, _user: Address): BigInt {
    let result = super.call(
      "getUserSubscription",
      "getUserSubscription(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_dropId),
        ethereum.Value.fromAddress(_user)
      ]
    );

    return result[0].toBigInt();
  }

  try_getUserSubscription(
    _dropId: BigInt,
    _user: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUserSubscription",
      "getUserSubscription(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_dropId),
        ethereum.Value.fromAddress(_user)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nftPerDropId(dropId: BigInt): Address {
    let result = super.call("nftPerDropId", "nftPerDropId(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(dropId)
    ]);

    return result[0].toAddress();
  }

  try_nftPerDropId(dropId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "nftPerDropId",
      "nftPerDropId(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  publisher(): Address {
    let result = super.call("publisher", "publisher():(address)", []);

    return result[0].toAddress();
  }

  try_publisher(): ethereum.CallResult<Address> {
    let result = super.tryCall("publisher", "publisher():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyCurrency(dropId: BigInt): Address {
    let result = super.call(
      "royaltyCurrency",
      "royaltyCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(dropId)]
    );

    return result[0].toAddress();
  }

  try_royaltyCurrency(dropId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltyCurrency",
      "royaltyCurrency(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimPayoutCall extends ethereum.Call {
  get inputs(): ClaimPayoutCall__Inputs {
    return new ClaimPayoutCall__Inputs(this);
  }

  get outputs(): ClaimPayoutCall__Outputs {
    return new ClaimPayoutCall__Outputs(this);
  }
}

export class ClaimPayoutCall__Inputs {
  _call: ClaimPayoutCall;

  constructor(call: ClaimPayoutCall) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimPayoutCall__Outputs {
  _call: ClaimPayoutCall;

  constructor(call: ClaimPayoutCall) {
    this._call = call;
  }
}

export class ClaimPayoutsCall extends ethereum.Call {
  get inputs(): ClaimPayoutsCall__Inputs {
    return new ClaimPayoutsCall__Inputs(this);
  }

  get outputs(): ClaimPayoutsCall__Outputs {
    return new ClaimPayoutsCall__Outputs(this);
  }
}

export class ClaimPayoutsCall__Inputs {
  _call: ClaimPayoutsCall;

  constructor(call: ClaimPayoutsCall) {
    this._call = call;
  }

  get _dropIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class ClaimPayoutsCall__Outputs {
  _call: ClaimPayoutsCall;

  constructor(call: ClaimPayoutsCall) {
    this._call = call;
  }
}

export class ClaimPayoutsOnBehalfCall extends ethereum.Call {
  get inputs(): ClaimPayoutsOnBehalfCall__Inputs {
    return new ClaimPayoutsOnBehalfCall__Inputs(this);
  }

  get outputs(): ClaimPayoutsOnBehalfCall__Outputs {
    return new ClaimPayoutsOnBehalfCall__Outputs(this);
  }
}

export class ClaimPayoutsOnBehalfCall__Inputs {
  _call: ClaimPayoutsOnBehalfCall;

  constructor(call: ClaimPayoutsOnBehalfCall) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimPayoutsOnBehalfCall__Outputs {
  _call: ClaimPayoutsOnBehalfCall;

  constructor(call: ClaimPayoutsOnBehalfCall) {
    this._call = call;
  }
}

export class ClaimPayoutsOnBehalf1Call extends ethereum.Call {
  get inputs(): ClaimPayoutsOnBehalf1Call__Inputs {
    return new ClaimPayoutsOnBehalf1Call__Inputs(this);
  }

  get outputs(): ClaimPayoutsOnBehalf1Call__Outputs {
    return new ClaimPayoutsOnBehalf1Call__Outputs(this);
  }
}

export class ClaimPayoutsOnBehalf1Call__Inputs {
  _call: ClaimPayoutsOnBehalf1Call;

  constructor(call: ClaimPayoutsOnBehalf1Call) {
    this._call = call;
  }

  get _dropIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _user(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ClaimPayoutsOnBehalf1Call__Outputs {
  _call: ClaimPayoutsOnBehalf1Call;

  constructor(call: ClaimPayoutsOnBehalf1Call) {
    this._call = call;
  }
}

export class ClaimPayoutsOnMultipleBehalfCall extends ethereum.Call {
  get inputs(): ClaimPayoutsOnMultipleBehalfCall__Inputs {
    return new ClaimPayoutsOnMultipleBehalfCall__Inputs(this);
  }

  get outputs(): ClaimPayoutsOnMultipleBehalfCall__Outputs {
    return new ClaimPayoutsOnMultipleBehalfCall__Outputs(this);
  }
}

export class ClaimPayoutsOnMultipleBehalfCall__Inputs {
  _call: ClaimPayoutsOnMultipleBehalfCall;

  constructor(call: ClaimPayoutsOnMultipleBehalfCall) {
    this._call = call;
  }

  get _dropIds(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _users(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ClaimPayoutsOnMultipleBehalfCall__Outputs {
  _call: ClaimPayoutsOnMultipleBehalfCall;

  constructor(call: ClaimPayoutsOnMultipleBehalfCall) {
    this._call = call;
  }
}

export class ClaimPayoutsOnMultipleBehalf1Call extends ethereum.Call {
  get inputs(): ClaimPayoutsOnMultipleBehalf1Call__Inputs {
    return new ClaimPayoutsOnMultipleBehalf1Call__Inputs(this);
  }

  get outputs(): ClaimPayoutsOnMultipleBehalf1Call__Outputs {
    return new ClaimPayoutsOnMultipleBehalf1Call__Outputs(this);
  }
}

export class ClaimPayoutsOnMultipleBehalf1Call__Inputs {
  _call: ClaimPayoutsOnMultipleBehalf1Call;

  constructor(call: ClaimPayoutsOnMultipleBehalf1Call) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _users(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ClaimPayoutsOnMultipleBehalf1Call__Outputs {
  _call: ClaimPayoutsOnMultipleBehalf1Call;

  constructor(call: ClaimPayoutsOnMultipleBehalf1Call) {
    this._call = call;
  }
}

export class DistributeCall extends ethereum.Call {
  get inputs(): DistributeCall__Inputs {
    return new DistributeCall__Inputs(this);
  }

  get outputs(): DistributeCall__Outputs {
    return new DistributeCall__Outputs(this);
  }
}

export class DistributeCall__Inputs {
  _call: DistributeCall;

  constructor(call: DistributeCall) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _prepaid(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class DistributeCall__Outputs {
  _call: DistributeCall;

  constructor(call: DistributeCall) {
    this._call = call;
  }
}

export class DistributeOnBehalfCall extends ethereum.Call {
  get inputs(): DistributeOnBehalfCall__Inputs {
    return new DistributeOnBehalfCall__Inputs(this);
  }

  get outputs(): DistributeOnBehalfCall__Outputs {
    return new DistributeOnBehalfCall__Outputs(this);
  }
}

export class DistributeOnBehalfCall__Inputs {
  _call: DistributeOnBehalfCall;

  constructor(call: DistributeOnBehalfCall) {
    this._call = call;
  }

  get _dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DistributeOnBehalfCall__Outputs {
  _call: DistributeOnBehalfCall;

  constructor(call: DistributeOnBehalfCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitPayoutIndexCall extends ethereum.Call {
  get inputs(): InitPayoutIndexCall__Inputs {
    return new InitPayoutIndexCall__Inputs(this);
  }

  get outputs(): InitPayoutIndexCall__Outputs {
    return new InitPayoutIndexCall__Outputs(this);
  }
}

export class InitPayoutIndexCall__Inputs {
  _call: InitPayoutIndexCall;

  constructor(call: InitPayoutIndexCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _royaltyCurrency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dropId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class InitPayoutIndexCall__Outputs {
  _call: InitPayoutIndexCall;

  constructor(call: InitPayoutIndexCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _publisher(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _abDataRegistry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdatePayout1155Call extends ethereum.Call {
  get inputs(): UpdatePayout1155Call__Inputs {
    return new UpdatePayout1155Call__Inputs(this);
  }

  get outputs(): UpdatePayout1155Call__Outputs {
    return new UpdatePayout1155Call__Outputs(this);
  }
}

export class UpdatePayout1155Call__Inputs {
  _call: UpdatePayout1155Call;

  constructor(call: UpdatePayout1155Call) {
    this._call = call;
  }

  get _previousHolder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newHolder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dropIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _quantities(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }
}

export class UpdatePayout1155Call__Outputs {
  _call: UpdatePayout1155Call;

  constructor(call: UpdatePayout1155Call) {
    this._call = call;
  }
}

export class UpdatePayout721Call extends ethereum.Call {
  get inputs(): UpdatePayout721Call__Inputs {
    return new UpdatePayout721Call__Inputs(this);
  }

  get outputs(): UpdatePayout721Call__Outputs {
    return new UpdatePayout721Call__Outputs(this);
  }
}

export class UpdatePayout721Call__Inputs {
  _call: UpdatePayout721Call;

  constructor(call: UpdatePayout721Call) {
    this._call = call;
  }

  get _previousHolder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newHolder(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _dropId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _quantity(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class UpdatePayout721Call__Outputs {
  _call: UpdatePayout721Call;

  constructor(call: UpdatePayout721Call) {
    this._call = call;
  }
}
